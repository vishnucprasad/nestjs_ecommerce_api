// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email String @unique
  hash  String

  firstName String?
  lastName  String?

  adresses Address[]
  cart     Cart[]
  orders   Order[]
}

model Address {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name     String
  phone    String
  pinCode  Int
  locality String
  street   String
  city     String
  district String
  state    String

  landmark         String?
  alternativePhone String?

  userId Int
  user   User    @relation(fields: [userId], references: [id])
  order  Order[]
}

model Cart {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products Product[] @relation("CartProduct")

  userId Int
  user   User @relation(fields: [userId], references: [id])

  @@unique([userId])
}

model Product {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title  String
  price  Float
  images String[]

  description String?
  carts       Cart[]  @relation("CartProduct")
  orders      Order[] @relation("OrderProduct")
}

enum OrderStatus {
  PENDING
  PLACED
  CANCELLED
  SHIPPED
  DELIVERED
}

model Order {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products    Product[]   @relation("OrderProduct")
  orderStatus OrderStatus

  addressId Int
  address   Address @relation(fields: [addressId], references: [id])

  userId Int
  user   User @relation(fields: [userId], references: [id])
}
